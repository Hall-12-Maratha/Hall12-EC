/**
 * @description This ruleset enforces a strict user-ownership model for user profiles,
 *              allows public read access to positions and candidates, and restricts voting
 *              to authenticated users while preventing users from changing their votes.
 * @dataStructure
 *   - /users/{userId}: Stores individual user profiles, only accessible by the user themselves.
 *   - /positions/{positionId}: Stores electoral positions, publicly readable.
 *   - /candidates/{candidateId}: Stores candidate information, publicly readable.
 *   - /votes/{voteId}: Stores individual votes, only create permissions are allowed for authenticated users.
 * @keySecurityDecisions
 *   - User listing is disallowed for privacy.
 *   - Positions and candidates are publicly readable to facilitate easy access to election information.
 *   - Votes can only be created to prevent modification or deletion after submission.
 *   - The 'hasVoted' field on the user document is denormalized and updated via Cloud Functions after a vote is cast.
 *   - All write operations on votes are validated to ensure the userId matches the authenticated user's ID.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Development rules: allow read/write to all documents. DO NOT USE IN PRODUCTION.
    match /{document=**} {
      allow read, write: if true;
    }
  }
}